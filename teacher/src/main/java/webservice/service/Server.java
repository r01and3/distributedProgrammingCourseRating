
package webservice.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Server", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Server {


    /**
     * 
     * @return
     *     returns java.util.List<webservice.service.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWorks", targetNamespace = "http://server/", className = "webservice.service.GetWorks")
    @ResponseWrapper(localName = "getWorksResponse", targetNamespace = "http://server/", className = "webservice.service.GetWorksResponse")
    @Action(input = "http://server/Server/getWorksRequest", output = "http://server/Server/getWorksResponse")
    public List<Work> getWorks();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addWork", targetNamespace = "http://server/", className = "webservice.service.AddWork")
    @ResponseWrapper(localName = "addWorkResponse", targetNamespace = "http://server/", className = "webservice.service.AddWorkResponse")
    @Action(input = "http://server/Server/addWorkRequest", output = "http://server/Server/addWorkResponse")
    public int addWork(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWork", targetNamespace = "http://server/", className = "webservice.service.GetWork")
    @ResponseWrapper(localName = "getWorkResponse", targetNamespace = "http://server/", className = "webservice.service.GetWorkResponse")
    @Action(input = "http://server/Server/getWorkRequest", output = "http://server/Server/getWorkResponse")
    public byte[] getWork(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAverageMark", targetNamespace = "http://server/", className = "webservice.service.GetAverageMark")
    @ResponseWrapper(localName = "getAverageMarkResponse", targetNamespace = "http://server/", className = "webservice.service.GetAverageMarkResponse")
    @Action(input = "http://server/Server/getAverageMarkRequest", output = "http://server/Server/getAverageMarkResponse")
    public double getAverageMark(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<webservice.service.Mark>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllMarks", targetNamespace = "http://server/", className = "webservice.service.GetAllMarks")
    @ResponseWrapper(localName = "getAllMarksResponse", targetNamespace = "http://server/", className = "webservice.service.GetAllMarksResponse")
    @Action(input = "http://server/Server/getAllMarksRequest", output = "http://server/Server/getAllMarksResponse")
    public List<Mark> getAllMarks(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getIdsRandomWorks", targetNamespace = "http://server/", className = "webservice.service.GetIdsRandomWorks")
    @ResponseWrapper(localName = "getIdsRandomWorksResponse", targetNamespace = "http://server/", className = "webservice.service.GetIdsRandomWorksResponse")
    @Action(input = "http://server/Server/getIdsRandomWorksRequest", output = "http://server/Server/getIdsRandomWorksResponse")
    public List<Integer> getIdsRandomWorks();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setMark", targetNamespace = "http://server/", className = "webservice.service.SetMark")
    @ResponseWrapper(localName = "setMarkResponse", targetNamespace = "http://server/", className = "webservice.service.SetMarkResponse")
    @Action(input = "http://server/Server/setMarkRequest", output = "http://server/Server/setMarkResponse")
    public void setMark(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

}
